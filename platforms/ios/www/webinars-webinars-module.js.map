{"version":3,"sources":["webpack:///./src/app/pages/webinars/webinars.module.ts","webpack:///./src/app/pages/webinars/webinars.page.html","webpack:///./src/app/pages/webinars/webinars.page.scss","webpack:///./src/app/pages/webinars/webinars.page.ts","webpack:///./src/app/services/webinars.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEE;AAE/C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAWF;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAT9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,2DAAY,CAAC;SAC7B,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB/B,smBAAsmB,oBAAoB,wNAAwN,gBAAgB,gGAAgG,eAAe,0EAA0E,aAAa,sW;;;;;;;;;;;ACAxiC,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;ACAb;AACc;AACI;AAQpE;IAGE,sBAAoB,GAAiB,EAC3B,OAAuB;QADb,QAAG,GAAH,GAAG,CAAc;QAC3B,YAAO,GAAP,OAAO,CAAgB;QAEnC,IAAI,CAAC,cAAc,EAAE,CAAC;IACjB,CAAC;IAEJ,+BAAQ,GAAR,UAAS,GAAW,EAAE,MAAc;QACpC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IAC9B,CAAC;IACI,qCAAc,GAApB;;;;;;wBACE,SAAI;wBAAW,qBAAM,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;;wBAAhD,GAAK,QAAQ,GAAE,SAAiC,CAAC;;;;;KAClD;IACC,+BAAQ,GAAR;IACA,CAAC;IAhBU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,wGAAmC;;SAEpC,CAAC;+EAIyB,6EAAY;YACnB,iFAAe;OAJtB,YAAY,CAkBxB;IAAD,mBAAC;CAAA;AAlBwB;;;;;;;;;;;;;;;;;;;;;;ACVkB;AACa;AACL;AACpB;AAEmB;AAKlD;IAEE,yBACU,IAAgB,EAChB,GAAkB;QADlB,SAAI,GAAJ,IAAI,CAAY;QAChB,QAAG,GAAH,GAAG,CAAe;IAE1B,CAAC;IAGG,sCAAY,GAAlB;;;;;;;wBAEQ,GAAG,GAAG,mEAAa,GAAG,eAAe,CAAC;wBAC5B,qBAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,GAAG,CAAC;iCACrD,SAAS,EAAE;iCACX,IAAI,CAAC,cAAI;gCACR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gCAC3B,KAAI,CAAC,QAAQ,GAAI,IAAI,CAAC,QAAQ,CAAC;gCAC/B,OAAO,KAAI,CAAC,QAAQ,CAAC;4BACvB,CAAC,CAAC;iCACD,KAAK,CAAC,eAAK;gCACV,KAAI,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;gCAC3B,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;4BAC/B,CAAC,CAAC;;wBAVA,OAAO,GAAG,SAUV;wBACJ,sBAAO,OAAO,EAAC;;;;KAElB;IAzBU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAIgB,+DAAU;YACZ,+DAAc;OAJjB,eAAe,CA0B3B;IAAD,sBAAC;CAAA;AA1B2B","file":"webinars-webinars-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { WebinarsPage } from './webinars.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: WebinarsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [WebinarsPage]\n})\nexport class WebinarsPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <ion-back-button color=\\\"light\\\" text=\\\"Volver\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Webinars</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-item  *ngFor=\\\"let webinar of webinars\\\" (click)=\\\"abrirWeb( webinar.url,'_system')\\\" >\\n        <ion-label class=\\\"ion-text-wrap\\\">     \\n          <ion-row>\\n            <ion-col size=\\\"4\\\">\\n                \\n                    <img class=\\\"logoSmall\\\" src=\\\"{{webinar.ruta_icono}}\\\">\\n                 \\n            </ion-col>\\n            <ion-col size=\\\"8\\\">               \\n          <ion-text color=\\\"secondary\\\">\\n              <ion-text color=\\\"primary\\\">         \\n                  <h3>{{webinar.titulo}}</h3>\\n                  \\n                </ion-text>\\n\\n          </ion-text>\\n          <p>{{webinar.fecha}}</p>\\n        </ion-col>\\n      </ion-row>  \\n      <p color=\\\"danger\\\">{{webinar.url}}</p>\\n        </ion-label>\\n      </ion-item>\\n      </ion-list>\\n\\n\\n\\n<!--ion-card>\\n  <img src=\\\"../../assets/img/col1.png\\\" class=\\\"logoSmall\\\">\\n</ion-card>\\n<ion-card>\\n  <img src=\\\"../../assets/img/col2.png\\\" class=\\\"logoSmall\\\">\\n</ion-card>\\n<ion-card>\\n  <img src=\\\"../../assets/img/col3.png\\\" class=\\\"logoSmall\\\">\\n</ion-card-->\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3dlYmluYXJzL3dlYmluYXJzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { InAppBrowser } from '@ionic-native/in-app-browser/ngx';\nimport { WebinarsService } from 'src/app/services/webinars.service';\nimport { InterfaceWebinar, IWebinar } from 'src/app/interfaces/webinars';\n\n@Component({\n  selector: 'app-webinars',\n  templateUrl: './webinars.page.html',\n  styleUrls: ['./webinars.page.scss'],\n})\nexport class WebinarsPage implements OnInit {\n\n  webinars: IWebinar[];\n  constructor(private iab: InAppBrowser,\n    private webinar:WebinarsService) {\n     \nthis.cargarWebinars();\n     }\n\n  abrirWeb(url: string, target: string){\n\t\tthis.iab.create(url, target);\n\t}\nasync cargarWebinars(){\n  this.webinars= await this.webinar.cargar_todos();\n}\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { URL_SERVICIOS } from \"../config/url.servicios\";\nimport { AjustesService } from './ajustes.service';\nimport 'rxjs/add/operator/map';\nimport { InterfaceWebinar, IWebinar} from '../interfaces/webinars';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebinarsService {\n  webinars: IWebinar[];\n  constructor(\n    private http: HttpClient,\n    private _as:AjustesService) { \n\n    }\n\n\n  async cargar_todos() {\n      \n      let url = URL_SERVICIOS + \"/webinars.php\";\n      let promesa = await this.http.get<InterfaceWebinar>(url)\n        .toPromise()\n        .then(data => {\n          console.log(data.webinars);\n          this.webinars =  data.webinars;\n          return this.webinars;\n        })\n        .catch(error => {\n          this._as.loading.dismiss();\n          return Promise.reject(error);\n        });\n      return promesa;\n    \n  }\n}\n"],"sourceRoot":""}